import { getConstants } from './constants.js';

let otpCountdown = null;
let otpValidityCountdown = null;

document.addEventListener("DOMContentLoaded", async () => {
  const { BACKEND_URL } = getConstants();
  const softwareSelect = document.getElementById("softwareName");
  const note = document.getElementById("otpNote");

  const response = await fetch(BACKEND_URL, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ action: "getSoftwareListUnique" })
  });

  const result = await response.json();
  if (result.status === "success" && Array.isArray(result.list)) {
    result.list.forEach(name => {
      const option = document.createElement("option");
      option.value = name;
      option.textContent = name;
      softwareSelect.appendChild(option);
    });
  }

  if (note) {
    note.innerHTML = `üí° <strong>H∆∞·ªõng d·∫´n:</strong> N·∫øu ph·∫ßn m·ªÅm y√™u c·∫ßu nh·∫≠p m√£ t·ª´ ·ª©ng d·ª•ng x√°c minh, ch·ªçn "<strong>·ª®ng d·ª•ng Authy</strong>".<br />
    N·∫øu ph·∫ßn m·ªÅm g·ª≠i m√£ v·ªÅ email ƒëƒÉng nh·∫≠p, ch·ªçn "<strong>Email</strong>".`;
  }
});

document.getElementById("btnGetOtp").addEventListener("click", async () => {
  const emailDangKy = document.getElementById("emailDangKy").value.trim();
  const software = document.getElementById("softwareName").value;
  const otpSource = document.getElementById("otpSource").value;
  const output = document.getElementById("otpResult");

  if (!emailDangKy || !software || !otpSource) {
    alert("Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin!");
    return;
  }

  const { BACKEND_URL } = getConstants();

  // B∆∞·ªõc 1: ki·ªÉm tra ƒëi·ªÅu ki·ªán v·ªõi backend
  const response = await fetch(BACKEND_URL, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({
      action: "getOtpByRequest",
      email: emailDangKy,
      software,
      otpSource
    })
  });

  const result = await response.json();

  if (result.status === "error") {
    output.innerHTML = `<div style="color: red;">‚ùå ${result.message}</div>`;
    return;
  }

  // B∆∞·ªõc 2: ƒë·ªß ƒëi·ªÅu ki·ªán ‚Üí ch·ªù ƒë√∫ng ƒë·∫ßu chu k·ª≥ m·ªõi g·ª≠i l·∫°i request ƒë·ªÉ l·∫•y OTP
  const msUntilNextOtp = 30000 - (Date.now() % 30000);
  const delay = msUntilNextOtp + 30000;
  let seconds = Math.ceil(delay / 1000);

  showMessage(`‚è≥ Vui l√≤ng ƒë·ª£i ${seconds}s ƒë·ªÉ l·∫•y m√£ OTP m·ªõi...`);
  clearInterval(otpCountdown);
  otpCountdown = setInterval(() => {
    seconds--;
    showMessage(`‚è≥ Vui l√≤ng ƒë·ª£i ${seconds}s ƒë·ªÉ l·∫•y m√£ OTP m·ªõi...`);
    if (seconds <= 0) {
      clearInterval(otpCountdown);
      showOtp(result); // Hi·ªÉn th·ªã l·∫°i t·ª´ response ƒë√£ l∆∞u
    }
  }, 1000);
});

function showMessage(text) {
  const output = document.getElementById("otpResult");
  output.innerHTML = `<div style="color:#555; font-size:0.95em;">${text}</div>`;
}

function showOtp(result) {
  const output = document.getElementById("otpResult");

  // T·∫°o khung hi·ªÉn th·ªã OTP
  const container = document.createElement("div");
  container.style.border = "1px dashed #1a73e8";
  container.style.padding = "14px";
  container.style.borderRadius = "8px";
  container.style.backgroundColor = "#f1f8ff";
  container.style.textAlign = "center";
  container.style.cursor = "pointer";
  container.id = "otpBox";

  const otpCode = document.createElement("div");
  otpCode.textContent = result.otp;
  otpCode.style.fontSize = "1.6em";
  otpCode.style.fontWeight = "bold";
  otpCode.style.color = "#1a73e8";
  otpCode.style.marginBottom = "8px";

  const copyHint = document.createElement("div");
  copyHint.textContent = "(Click v√†o m√£ OTP ƒë·ªÉ sao ch√©p)";
  copyHint.style.fontSize = "0.85em";
  copyHint.style.color = "#777";

  const expireNote = document.createElement("div");
  expireNote.id = "otpExpireNote";
  expireNote.style.fontSize = "0.85em";
  expireNote.style.color = "#555";
  expireNote.style.marginTop = "10px";

  const deviceNote = document.createElement("div");
  deviceNote.textContent = result.message || "";
  deviceNote.style.marginTop = "6px";

  container.appendChild(otpCode);
  container.appendChild(copyHint);
  container.appendChild(expireNote);
  container.appendChild(deviceNote);

  container.addEventListener("click", () => {
    navigator.clipboard.writeText(result.otp);
    alert("‚úÖ M√£ OTP ƒë√£ ƒë∆∞·ª£c sao ch√©p!");
  });

  output.innerHTML = "";
  output.appendChild(container);

  // ƒê·∫øm ng∆∞·ª£c hi·ªáu l·ª±c OTP
  let remain = 30;
  expireNote.textContent = `‚è±Ô∏è M√£ OTP c√≤n hi·ªáu l·ª±c trong ${remain}s`;
  clearInterval(otpValidityCountdown);
  otpValidityCountdown = setInterval(() => {
    remain--;
    if (remain > 0) {
      expireNote.textContent = `‚è±Ô∏è M√£ OTP c√≤n hi·ªáu l·ª±c trong ${remain}s`;
    } else {
      clearInterval(otpValidityCountdown);
      output.innerHTML = "";
    }
  }, 1000);
}
